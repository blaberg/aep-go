syntax = "proto3";

package example.books.v1;

import "google/api/client.proto";
import "example/v1/book.proto";
import "google/api/field_behavior.proto";
import "google/api/annotations.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

service FreightService {
    // Get a book
    rpc GetBook(GetBookRequest) returns (Book) {
        option (google.api.http) = {
          get: "/v1/{path=books/*}"
        };
        option (google.api.method_signature) = "path";
      }

      rpc ListBooks(ListBooksRequest) returns (ListBooksResponse) {
        option (google.api.http) = {
          get: "/v1/{parent=publishers/*}/books"
        };
        option (google.api.method_signature) = "parent";
      }

    rpc CreateBook(CreateBookRequest) returns (Book) {
      option (google.api.http) = {
        post: "/v1/{parent=publishers/*}/books"
        body: "book"
      };
      option (google.api.method_signature) = "parent,book";
    }

    rpc UpdateBook(UpdateBookRequest) returns (Book) {
      option (google.api.http) = {
        patch: "/v1/{path=publishers/*/books/*}"
        body: "book"
      };
      option (google.api.method_signature) = "book,update_mask";
    }

    rpc DeleteBook(DeleteBookRequest) returns (google.protobuf.Empty) {
      option (google.api.http) = {
        delete: "/v1/{path=publishers/*/books/*}"
      };
      option (google.api.method_signature) = "path";
    }

}

message GetBookRequest {
    // The path of the book to retrieve.
    string path = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "example/Book"
      }];
  }

  message ListBooksRequest {
    // The publisher to list books for.
    string parent = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        child_type: "library.googleapis.com/Book"
      }];

    // The maximum number of books to return.
    // The service may send fewer.
    int32 max_page_size = 2;

    // The page token.
    // If a `next_page_token` value was received on a previous
    // ListBooks call, providing it here will return the next page.
    string page_token = 3;
  }

  message ListBooksResponse {
    // The books under the umbrella of the given publisher.
    repeated Book results = 1;

    // The token to retrieve the next page. This is populated if and only if
    // there are more pages.
    string next_page_token = 2;
  }

  message CreateBookRequest {
    // The parent resource where this book will be created.
    // Format: publishers/{publisher}
    string parent = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        child_type: "library.example.com/Book"
      }];

    // The ID to use for the book, which will become the final component of
    // the book's resource path.
    //
    // This value should be 4-63 characters, and valid characters
    // are /[a-z][0-9]-/.
    string id = 2 [(google.api.field_behavior) = REQUIRED];

    // The book to create.
    Book book = 3 [(google.api.field_behavior) = REQUIRED];
  }

  message UpdateBookRequest {
    // The path of the book to update.
    string path = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "library.googleapis.com/Book"
      }];

    // The value to update the book to.
    // Format: publishers/{publisher}/books/{book}
    Book book = 2 [(google.api.field_behavior) = REQUIRED];

    // The list of fields to update.
    google.protobuf.FieldMask update_mask = 3;
  }

  message DeleteBookRequest {
    // The path of the book to delete.
    // Format: publishers/{publisher}/books/{book}
    string path = 1 [
      (google.api.field_behavior) = REQUIRED,
      (google.api.resource_reference) = {
        type: "library.example.com/Book"
      }];
  }
